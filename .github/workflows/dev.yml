name: "DEV CI"
on:
  push:
    branches:
      - dev

jobs:
  build-info:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.get_version.outputs.app_version }}
      pkg-name: ${{ steps.get_package.outputs.pkg_name }}
      tag-name: ${{ steps.get_version.outputs.get_version }}

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: "Checkout build-info repo"
        uses: actions/checkout@v4
        with:
          repository: sunnydodti/build-info
          token: ${{ secrets.BUILD_INFO_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: build-info
          ref: main

      - name: "Get Package Name"
        id: get_package
        run: |
          PACKAGE_NAME="$(grep -o 'package="[^"]*"' flutter_app/android/app/src/main/AndroidManifest.xml | cut -d '"' -f 2).dev"
          echo "pkg_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: "Get Tag Name"
        id: get_tag
        run: |
          if [[ ${{github.ref_name == 'main' }} ]]; then
            PACKAGE_NAME="$(grep -o 'package="[^"]*"' flutter_app/android/app/src/main/AndroidManifest.xml | cut -d '"' -f 2)"
          else
            PACKAGE_NAME="$(grep -o 'package="[^"]*"' flutter_app/android/app/src/main/AndroidManifest.xml | cut -d '"' -f 2).dev"
          fi
          echo "tag_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: "Read Version"
        id: get_version
        run: |
          APP_VERSION="$(yq -r '.version' 'flutter_app/pubspec.yaml')-dev"
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT

  build-android:
    if: ${{ github.ref_name == 'dev' }}
    needs: build-info
    runs-on: ubuntu-latest

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: flutter_app/pubspec.yaml

      - name: Build Details
        run: |
          echo "== build details =="
          echo "build: ${{ github.ref_name }}"
          echo "app version: ${{ needs.build-info.outputs.app-version }}"
          echo "package name: ${{ needs.build-info.outputs.pkg-name }}"
          echo "tag name: ${{ needs.build-info.outputs.tag-name }}"

      - name: "Pub Get"
        run: cd flutter_app && flutter pub get

      - name: "Build Apk for dev"
        run: cd flutter_app && flutter build apk --flavor dev -t lib/main_dev.dart --split-per-abi

      - run: ls flutter_app/build/app/outputs/flutter-apk/*.apk
      - name: Rename Outputs
        run: |
          mv flutter_app/build/app/outputs/flutter-apk/app-arm64-v8a-dev-release.apk "flutter_app/build/app/outputs/flutter-apk/${{ vars.APP_NAME }}_${{ needs.build-info.outputs.app-version }}_arm64-v8a-release.apk"
          mv flutter_app/build/app/outputs/flutter-apk/app-armeabi-v7a-dev-release.apk "flutter_app/build/app/outputs/flutter-apk/${{ vars.APP_NAME }}_${{ needs.build-info.outputs.app-version }}_armeabi-v7a-release.apk"
          mv flutter_app/build/app/outputs/flutter-apk/app-x86_64-dev-release.apk "flutter_app/build/app/outputs/flutter-apk/${{ vars.APP_NAME }}_${{ needs.build-info.outputs.app-version }}_x86_64-release.apk"

      - name: "Release"
        uses: ncipollo/release-action@v1
        with:
          artifacts: flutter_app/build/app/outputs/flutter-apk/*.apk
          tag: "v${{ needs.build-info.outputs.date }}+${{github.run_number}}.${{ github.run_attempt }}"
          token: ${{ secrets.RELEASE_TOKEN }}
          prerelease: true

  # build_ios:
  #   runs-on: macos-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: 'Set up Xcode'
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'apple/developer-tools'
  #         path: '/usr/local/tools'
  #         ref: 'main'

  #     - name: 'Install Dependencies (iOS)'
  #       run: cd expense_tracker && flutter pub get

  #     - name: 'Build iOS App'
  #       run: cd expense_tracker && flutter build ios

  #     - name: "Upload iOS Artifact (Optional)"
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ios-app
  #         path: expense_tracker/build/ios/archive
