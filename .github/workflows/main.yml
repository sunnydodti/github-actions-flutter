name: 'Flutter CI'
on:
  push:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v3
      
      - name: 'list tree'
        run: |
          tree 
          echo "------------------"

      - name: 'Set up Flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: flutter_app/pubspec.yaml 

      - run: cd 'flutter_app'
      - run: cd flutter_app && flutter pub get
      # - run: cd flutter_app && flutter build apk --split-per-abi
      # - run: ls flutter_app/build/app/outputs/apk/release/*.apk

      - name: "create_tag"
        uses: jacopocarlini/action-autotag@stable
        with: 
          tag_prefix: "v"
          tag_suffix: "alpha"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: "Print Tag Output"
      #   run: |
      #     echo "Tag Name: ${{ steps.create_tag.outputs.tagname }}"
      #     echo "Tag SHA: ${{ steps.create_tag.outputs.tagsha }}"
      #     echo "Tag URI: ${{ steps.create_tag.outputs.taguri }}"
      #     echo "Tag Message: ${{ steps.create_tag.outputs.tagmessage }}"
      #     echo "Version: ${{ steps.create_tag.outputs.version }}"

      - name: Get version
        id: yq
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' 'flutter_app/pubspec.yaml'

      - name: Print version
        run: echo ${{ steps.yq.outputs.result }}

      - name: "Push to releases"
        uses: ncipollo/release-action@v1
        with: 
          # artifacts: flutter_app/build/app/outputs/apk/release/*.apk
          tag: ${{ steps.create_tag.outputs.tagname }}
          token: ${{ secrets.RELEASE_TOKEN }}
          
  # build_ios: 
  #   runs-on: macos-latest
  #   permissions:
  #     contents: read 
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: 'Set up Xcode'
  #       uses: actions/checkout@v3 
  #       with:
  #         repository: 'apple/developer-tools'
  #         path: '/usr/local/tools'
  #         ref: 'main'

  #     - name: 'Install Dependencies (iOS)'
  #       run: cd expense_tracker && flutter pub get

  #     - name: 'Build iOS App'
  #       run: cd expense_tracker && flutter build ios 

  #     - name: "Upload iOS Artifact (Optional)"
  #       uses: actions/upload-artifact@v3 
  #       with:
  #         name: ios-app 
  #         path: expense_tracker/build/ios/archive 