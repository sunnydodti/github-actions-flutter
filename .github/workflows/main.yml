name: "Flutter CI"
on:
  push:
    branches:
      - main
      - beta
      - alpha

jobs:
  update-build-info:
    runs-on: ubuntu-latest
    outputs:
      build-date: ${{ steps.update-build-info.outputs.build_date }}
      build-number: ${{ steps.update-build-info.outputs.build_number }}
      build-version: ${{ steps.update-build-info.outputs.build_ersion }}

    steps:
      # Checkout the other repository
      - name: Checkout build-info repo
        uses: actions/checkout@v3
        with:
          repository: sunnydodti/build-info
          token: ${{ secrets.BUILD_INFO_TOKEN }}
          path: build-info

      # Increment Build Information
      - name: Update Build Info
        id: update-build-info
        run: |
          REPO_PATH="build-info/${{ vars.APP_NAME }}"
          BUILD_DATE_FILE="$REPO_PATH/date.txt"
          BUILD_NUMBER_FILE="$REPO_PATH/number.txt"
          BUILD_VERSION_FILE="$REPO_PATH/version.txt"

          # Get today's date
          TODAY=$(date +'%Y-%m-%d')

          # Update date.txt
          if [[ -f "$BUILD_DATE_FILE" ]]; then
            BUILD_DATE=$(cat "$BUILD_DATE_FILE")
          else
            BUILD_DATE=""
          fi
          if [[ -z "$BUILD_DATE" || "$BUILD_DATE" != "$TODAY" ]]; then
            echo "$TODAY" > "$BUILD_DATE_FILE"
          fi

          # Update number.txt
          if [[ -f "$BUILD_NUMBER_FILE" ]]; then
            BUILD_NUMBER=$(cat "$BUILD_NUMBER_FILE")
          else
            BUILD_NUMBER=""
          fi
          if [[ -z "$BUILD_NUMBER" || "$BUILD_DATE" != "$TODAY" ]]; then
            BUILD_NUMBER=1
          else
            BUILD_NUMBER=$((BUILD_NUMBER + 1))
          fi
          echo "$BUILD_NUMBER" > "$BUILD_NUMBER_FILE"

          # Update version.txt (increment minor version)
          if [[ -f "$BUILD_VERSION_FILE" ]]; then
            BUILD_VERSION=$(cat "$BUILD_VERSION_FILE")
          else
            BUILD_VERSION="0.0.0"
          fi
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BUILD_VERSION"
          MINOR=$((MINOR + 1))
          BUILD_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$BUILD_VERSION" > "$BUILD_VERSION_FILE"

          # Set outputs
          echo "build_date=$(cat $BUILD_DATE_FILE)" >> $GITHUB_OUTPUT
          echo "build_number=$(cat $BUILD_NUMBER_FILE)" >> $GITHUB_OUTPUT
          echo "build_version=$(cat $BUILD_VERSION_FILE)" >> $GITHUB_OUTPUT

      # Commit changes to the other repository
      - name: Commit and Push Changes
        run: |
          cd build-info
          git config --local user.email "github-actions_build-info-pat@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Update build info: $(date)"
          git push

  set-package-and-version:
    runs-on: ubuntu-latest
    needs: update-build-info
    outputs:
      package-name: ${{ steps.get_package.outputs.pkg_name }}
      app-version: ${{ steps.get_version.outputs.version_number }}
      package-name-build: "${{ steps.get_package.outputs.pkg_name }}.${{ github.ref_name }}"
      app-version-build: "${{ steps.get_version.outputs.version_number }}-${{ github.ref_name }}+${{needs.update-build-info.outputs.build-number}}"

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: "Checkout build-info repo"
        uses: actions/checkout@v4
        with:
          repository: sunnydodti/build-info
          token: ${{ secrets.BUILD_INFO_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: build-info
          ref: main

      - name: "list tree"
        run: |
          tree

      - name: "Get Package Name"
        id: get_package
        run: |
          OLD_PACKAGE_NAME=$(grep -o 'package="[^"]*"' flutter_app/android/app/src/main/AndroidManifest.xml | cut -d '"' -f 2)
          echo "pkg_name=$OLD_PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: "Read Version"
        id: get_version
        run: |
          OLD_VERSION=$(yq -r '.version' 'flutter_app/pubspec.yaml')
          echo "version_number=$OLD_VERSION" >> $GITHUB_OUTPUT

      - name: Extract branch name
        shell: bash
        run: echo ${{ github.ref_name }}
        id: extract_branch

  build-android:
    runs-on: ubuntu-latest
    needs: [set-package-and-version, update-build-info]

    steps:
      - name: "Clone repository"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: flutter_app/pubspec.yaml

      - name: Build Details
        run: |
          echo "== build details =="
          echo "build: ${{ github.ref_name }}"
          echo "package: ${{ needs.set-package-and-version.outputs.package-name-build }}"
          echo "version: ${{ needs.set-package-and-version.outputs.app-version-build }}"
          echo "build-date: ${{ needs.update-build-info.outputs.build-date }}"
          echo "build-number: ${{ needs.update-build-info.outputs.build-number }}"
          echo "build-version: ${{ needs.update-build-info.outputs.build-version }}"

      - name: "Modify Package Name and Version"
        if: ${{ github.ref_name == 'alpha' || github.ref_name == 'beta' }}
        run: |
          # Update build.gradle
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/build.gradle
          # Update main/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/main/AndroidManifest.xml
          # Update profile/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/profile/AndroidManifest.xml
          # Update debug/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/debug/AndroidManifest.xml
          # Update MainActivity.kt
          sed -i 's/${{ needs.set-package-and-version.outputs.package-name }}/${{ needs.set-package-and-version.outputs.package-name-build }}/g' flutter_app/android/app/src/main/kotlin/com/example/flutter_app/MainActivity.kt

          # Update pubspec.yaml
          yq ".version = \"${{ needs.set-package-and-version.outputs.app-version-build }}\"" flutter_app/pubspec.yaml > temp.yaml && mv temp.yaml flutter_app/pubspec.yaml

      - name: "Check for Changes"
        run: |
          git diff --exit-code flutter_app/android/app/build.gradle || echo "build.gradle not updated"
          git diff --exit-code flutter_app/android/app/src/main/AndroidManifest.xml || echo "main/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/profile/AndroidManifest.xml || echo "profile/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/debug/AndroidManifest.xml || echo "debug/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/main/kotlin/com/example/flutter_app/MainActivity.kt || echo "MainActivity.kt not updated"
          git diff --exit-code flutter_app/pubspec.yml || echo "MainActivity.kt not updated"

      - run: cd flutter_app && flutter pub get
      - run: cd flutter_app && flutter build apk --split-per-abi
      - run: ls flutter_app/build/app/outputs/apk/release/*.apk
      - name: Rename Outputs
        run: |
          mv flutter_app/build/app/outputs/apk/release/app-arm64-v8a-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name}}-${{ needs.set-package-and-version.outputs.app-version-build }}_arm64-v8a-release.apk"
          mv flutter_app/build/app/outputs/apk/release/app-armeabi-v7a-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name }}-${{ needs.set-package-and-version.outputs.app-version-build }}_armeabi-v7a-release.apk"
          mv flutter_app/build/app/outputs/apk/release/app-x86_64-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name }}-${{ needs.set-package-and-version.outputs.app-version-build }}_x86_64-release.apk"
      - name: "Push to releases"
        uses: ncipollo/release-action@v1
        with:
          artifacts: flutter_app/build/app/outputs/apk/release/*.apk
          tag: "v${{ needs.set-package-and-version.outputs.app-version-build }}"
          token: ${{ secrets.RELEASE_TOKEN }}
          prerelease: ${{ github.ref_name == 'alpha' || github.ref_name == 'beta'}}

  # build_ios:
  #   runs-on: macos-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: 'Set up Xcode'
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'apple/developer-tools'
  #         path: '/usr/local/tools'
  #         ref: 'main'

  #     - name: 'Install Dependencies (iOS)'
  #       run: cd expense_tracker && flutter pub get

  #     - name: 'Build iOS App'
  #       run: cd expense_tracker && flutter build ios

  #     - name: "Upload iOS Artifact (Optional)"
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ios-app
  #         path: expense_tracker/build/ios/archive
