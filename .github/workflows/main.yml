name: 'Flutter CI'
on:
  push:
    branches:
      - main
      - beta
      - alpha

jobs:

  set-package-and-version:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.get_package.outputs.pkg_name }}
      app-version: ${{ steps.get_version.outputs.version_number }}
      package-name-build: "${{ steps.get_package.outputs.pkg_name }}.${{ github.ref_name }}"
      app-version-build: "${{ steps.get_version.outputs.version_number }}-${{ github.ref_name }}"

    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: 'Checkout build-info repo'
        uses: actions/checkout@v4
        with:
          repository: sunnydodti/build-info
          # token: ${{ secrets.RELEASE_TOKEN }} # `GH_PAT` is a secret that contains your PAT
          path: build-info
      
      - name: 'list tree'
        run: |
          tree 

      - name: 'Get Package Name'
        id: get_package
        run: |
          OLD_PACKAGE_NAME=$(grep -o 'package="[^"]*"' flutter_app/android/app/src/main/AndroidManifest.xml | cut -d '"' -f 2)
          echo "pkg_name=$OLD_PACKAGE_NAME" >> $GITHUB_OUTPUT
      
      - name: 'Read Version'
        id: get_version
        run: |
          OLD_VERSION=$(yq -r '.version' 'flutter_app/pubspec.yaml')
          echo "version_number=$OLD_VERSION" >> $GITHUB_OUTPUT
          
      - name: Extract branch name
        shell: bash
        run: echo ${{ github.ref_name }}
        id: extract_branch

  build-android:
    runs-on: ubuntu-latest
    needs: set-package-and-version

    steps:
      - name: 'Clone repository'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      
      - name: 'list tree'
        run: |
          tree 
          echo "------------------"
      
      - name: 'Set up Flutter'
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            flutter-version-file: flutter_app/pubspec.yaml 
        
      - name: Build Details
        run: |
          echo "== build details =="
          echo "build: ${{ github.ref_name }}"
          echo "package: ${{ needs.set-package-and-version.outputs.package-name-build }}"
          echo "version: ${{ needs.set-package-and-version.outputs.app-version-build }}"
      
      - name: "Modify Package Name and Version"
        if: ${{ github.ref_name }} == 'alpha' || ${{ github.ref_name }} == 'beta'
        run: |
          # Update build.gradle
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/build.gradle
          # Update main/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/main/AndroidManifest.xml
          # Update profile/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/profile/AndroidManifest.xml
          # Update debug/AndroidManifest.xml
          sed -i "s/\"${{ needs.set-package-and-version.outputs.package-name }}\"/\"${{ needs.set-package-and-version.outputs.package-name-build }}\"/g" flutter_app/android/app/src/debug/AndroidManifest.xml
          # Update MainActivity.kt
          sed -i 's/${{ needs.set-package-and-version.outputs.package-name }}/${{ needs.set-package-and-version.outputs.package-name-build }}/g' flutter_app/android/app/src/main/kotlin/com/example/flutter_app/MainActivity.kt

          # Update pubspec.yaml
          yq ".version = \"${{ needs.set-package-and-version.outputs.app-version-build }}\"" flutter_app/pubspec.yaml > temp.yaml && mv temp.yaml flutter_app/pubspec.yaml

      - name: "Check for Changes"
        run: |
          git diff --exit-code flutter_app/android/app/build.gradle || echo "build.gradle not updated"
          git diff --exit-code flutter_app/android/app/src/main/AndroidManifest.xml || echo "main/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/profile/AndroidManifest.xml || echo "profile/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/debug/AndroidManifest.xml || echo "debug/AndroidManifest.xml not updated"
          git diff --exit-code flutter_app/android/app/src/main/kotlin/com/example/flutter_app/MainActivity.kt || echo "MainActivity.kt not updated"
          git diff --exit-code flutter_app/pubspec.yml || echo "MainActivity.kt not updated"

      - run: cd flutter_app && flutter pub get
      - run: cd flutter_app && flutter build apk --split-per-abi
      - run: ls flutter_app/build/app/outputs/apk/release/*.apk
      - name: Rename Outputs
        run: |
          mv flutter_app/build/app/outputs/apk/release/app-arm64-v8a-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name}}_${{ needs.set-package-and-version.outputs.app-version-build }}_arm64-v8a-release.apk"
          mv flutter_app/build/app/outputs/apk/release/app-armeabi-v7a-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name }}_${{ needs.set-package-and-version.outputs.app-version-build }}_armeabi-v7a-release.apk"
          mv flutter_app/build/app/outputs/apk/release/app-x86_64-release.apk "flutter_app/build/app/outputs/apk/release/${{ needs.set-package-and-version.outputs.package-name }}_${{ needs.set-package-and-version.outputs.app-version-build }}_x86_64-release.apk"
      - name: "Push to releases"
        uses: ncipollo/release-action@v1
        with: 
          artifacts: flutter_app/build/app/outputs/apk/release/*.apk
          tag: "v${{ needs.set-package-and-version.outputs.app-version-build }}-${{ github.run_number }}"
          token: ${{ secrets.RELEASE_TOKEN }}
          prerelease: ${{ github.ref_name == 'alpha' || github.ref_name == 'beta'}} 

          
  # build_ios: 
  #   runs-on: macos-latest
  #   permissions:
  #     contents: read 
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: 'Set up Xcode'
  #       uses: actions/checkout@v3 
  #       with:
  #         repository: 'apple/developer-tools'
  #         path: '/usr/local/tools'
  #         ref: 'main'

  #     - name: 'Install Dependencies (iOS)'
  #       run: cd expense_tracker && flutter pub get

  #     - name: 'Build iOS App'
  #       run: cd expense_tracker && flutter build ios 

  #     - name: "Upload iOS Artifact (Optional)"
  #       uses: actions/upload-artifact@v3 
  #       with:
  #         name: ios-app 
  #         path: expense_tracker/build/ios/archive 